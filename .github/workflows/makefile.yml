name: Makefile CI

on: [push, pull_request]


jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: venv
      run: make setup
    - name: test
      run: make test

  semver:
    name: Semver
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: test
    outputs:
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      with:
        branch: 'main'
        extra_plugins: |
          @semantic-release/changelog
      env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
    - name: Semantic Version
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        echo ${{ steps.semantic.outputs.new_release_version }}
        
  
  publish: 
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [test, semver]
    name: dist and publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: venv
      run: make setup
    - name: dist
      env:
        GITHUB_TOKEN: ${{needs.semver.outputs.new_release_version}}
      run: |
        make dist
        make twine-check
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*
    - name: publish
      run: |
        export TWINE_PASSWORD=${{ secrets.PYPI_TEST_TOKEN }}
        export TWINE_USERNAME=__token__
        make publish
  

# TODO: TAG RELEASE with v
# TODO: Run Test for all branches, release for main
