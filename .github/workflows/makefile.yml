name: Makefile CI

on: [push, pull_request]


jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: venv
      run: make setup
    - name: test
      run: make test

  semver:
    name: Semver
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: test
    outputs:
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      custom_release_version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
      id: extract_branch

    - name: Semantic branch config
      shell: bash
      run: |
        if [[  ${{ steps.extract_branch.outputs.branch }} != main ]]; then 
        branch_config="{ \
              name: '${{ steps.extract_branch.outputs.branch }}', \
              prerelease: 'dev'\
            },"
        fi
        echo "##[set-output name=branch_config;]$(echo ${branch_config})"
      id: branch_config

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      with:
        semantic_version: 18
        branches: |    
          [
          'main', 
          ${{ steps.branch_config.outputs.branch_config }}
          ]
        dry_run: true
        extra_plugins: |
          @semantic-release/changelog@6
      env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
    - name: Set Semantic Version
      if: steps.semantic.outputs.new_release_published == 'true'
      shell: bash
      run: |
        if [[  ${{ steps.extract_branch.outputs.branch }} != main ]]; then
        echo "##[set-output name=version;]$(echo ${{ steps.semantic.outputs.new_release_version}}$(date +%d%m%y%H%M%S%3N))"
        else
        echo "##[set-output name=version;]$(echo ${{ steps.semantic.outputs.new_release_version }})" 
        fi
      id: version        
  
  publish: 
    if: ${{ github.event_name == 'push' }}
    needs: [test, semver]
    name: dist and publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: venv
      run: make setup
    - name: dist
      env:
        RELEASE_VERSION: ${{needs.semver.outputs.custom_release_version}}
      run: |
        make dist
        make twine-check
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*
    - name: publish
      run: |
        export TWINE_TEST_PASSWORD=${{ secrets.PYPI_TEST_TOKEN }}
        export TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }}
        export TWINE_USERNAME=__token__
        make publish
  
